78. Subsets
Medium

9626

153

Add to List

Share
Given an integer array nums of unique elements, return all possible subsets (the power set).

The solution set must not contain duplicate subsets. Return the solution in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
Example 2:

Input: nums = [0]
Output: [[],[0]]
 

Constraints:

1 <= nums.length <= 10
-10 <= nums[i] <= 10
All the numbers of nums are unique.
Accepted
1,059,076
Submissions
1,487,791
Seen this question in a real interview before?

Yes

No

================================================================================================================================================================


class Solution {
public:
void solve(int i,int n,vector<int> &arr,vector<vector<int> >&ans,vector<int> &curr)
{
    if(i==n)
    {
        ans.push_back(curr);
        return ;
    }
      curr.push_back(arr[i]);
      solve(i+1,n,arr,ans,curr);
      curr.pop_back();
      solve(i+1,n,arr,ans,curr);
    
}

    vector<vector<int>> subsets(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int> >ans;
        vector<int> curr;
        solve(0,n,nums,ans,curr);
        return ans;
    }
};
